92BF3E
rgb(23,100,145)
rgb(51,67,190) 
3343BE  blue
rgb(98,0,238)
rgb(98,0,238)
6200EE  blue
rgb(143,17,229)
rgb(143,17,229)
8F11E5

react native dashboard
table
chart
graph


JWT Authenication


circular slider

https://www.npmjs.com/package/react-native-circular-progress-indicator

https://www.npmjs.com/package/react-native-progress

'#0E5583 blue
#95BF40 green
logo colors

Teal and Coral:

Teal: #008080***
Coral: #FF7F50
Purple and Gold:

Purple: #800080
Gold: #FFD700
Midnight Blue and Silver:

Midnight Blue: #191970****
Silver: #C0C0C0
Orchid and Turquoise:

Orchid: #DA70D6
Turquoise: #40E0D0
Maroon and Champagne:

Maroon: #800000
Champagne: #F7E7CE
Navy Blue and Peach:

Navy Blue: #000080
Peach: #FFDAB9
Olive and Coral:

Olive: #808000
Coral: #FF7F50
Indigo and Lime Green:

Indigo: #4B0082
Lime Green: #00FF00

rgb(44,80,152)
2C5098


EEEDED
FAF3F0
F4F2DE
EDE4FF

E1F0F5
F5F5F5

  cardValue: {
    fontSize: 24,

    cardTitle: {
    fontSize: 16,

     card: {
    backgroundColor: '#fff',
    padding: 20,
    marginVertical: 10,
    borderRadius: 8,
    elevation: 5,
    minWidth: 150,
    justifyContent: 'center',
    alignItems: 'center',
  },

  daily expense
  labels: mon tues wed thrus fri satu sun
          amount

          bar chart

monthly expense
labels; months'
amount


line chart

total expense vs cash in hand



***********
container: {
    flex: 1,
  },
  bluecontainer: {
    backgroundColor: Colors.primary,
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    bottom: '90%',
  },
  contentContainer: {
    flexGrow: 1,
    alignItems: 'center',
    paddingTop: '10%',
  },
  itemContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderBottomWidth: 1,
    backgroundColor: '#fff',
    borderRadius: 20,
    marginBottom: 15,
    width: '90%',
  },

  BACDDB

  DDE6ED
  BFDCE5
  A0C3D2

  D3DEDC
  CEE6F3
  

  00DFA2

  FD8D14

  Steel Blue Gradient:

Start Color: #4A6572
End Color: #22333B
Earthy Brown Gradient:

Start Color: #60463B
End Color: #A78E78
Concrete Gray Gradient:

Start Color: #6C7A89
End Color: #95A5A6
Safety Yellow Gradient:

Start Color: #F1C40F
End Color: #F39C12
Rustic Orange Gradient:

Start Color: #B9770E
End Color: #D35400
Dark Green Gradient:

Start Color: #34495E
End Color: #2E4053

{renderGradientBackground(['#F1C40F', '#F39C12'])}
{renderGradientBackground(['#FBB03B', '#F59E0B'])} 
{renderGradientBackground(['#FDCB35', '#F39200'])}


F31559


leftcircle AntDesignback
back
leftcircleo
arrowleft
left
circledown
leftsquare

Entypo
chevron-left
chevron-small-left
chevron-with-circle-left


caret-left

{/* <PieChart
  data={pieData}
  width={Dimensions.get('window').width}
  height={220}
  chartConfig={{
    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,
  }}
  accessor="amount"
  backgroundColor="transparent"
  paddingLeft="15"
  absolute // For the absolute number display in the center
/> */}

//   const getPieChartData = () => {
//     const pieData = Object.keys(expenses).map((category) => ({
//       name: category,
//       amount: expenses[category],
//       color: randomColor(), // You can use a function to generate random colors
//     }));
//     return pieData;
//   };
//   const pieData = getPieChartData();
//   const randomColor = () => {
//     const colors = ['#FF5733', '#33FFB3', '#33A3FF', '#E833FF', '#FFA833'];
//     return colors[Math.floor(Math.random() * colors.length)];
//   };
 

 const EditExpenseEntry = () => {
  const navigation = useNavigation();

  // ... your code ...

  return (
    <View style={styles.container}>
      {/* Your custom header */}
      <View style={styles.bluecontainer}>
        {/*back icon */}
        <TouchableOpacity style={styles.backButton} onPress={GoBack} activeOpacity={0.8}>
          <FontAwesome name="caret-left" size={24} color={Colors.primary} />
        </TouchableOpacity>
        {/* Header */}
        <Text style={styles.headerText}>Edit Expense Entry</Text>
      </View>

      {/* ... rest of your code ... */}
    </View>
  );
};

EditExpenseEntry.navigationOptions = {
  headerShown: false, // Hide the default header
};

screenOptions={{ headerShown: false } }

const data = [
  { id: 1, product: 'Petrol', quantity: 1000 },
  { id: 2, product: 'Diesel', quantity: 2000 },
  { id: 3, product: 'Food', quantity: 5000 },
  { id: 4, product: 'Groceries', quantity: 7000 },
  { id: 5, product: 'Concrete', quantity: 12000 },
  { id: 6, product: 'Steel Bars', quantity: 15000 },
  { id: 7, product: 'Cement', quantity: 8000 },
  { id: 8, product: 'Sand', quantity: 4000 },
  { id: 9, product: 'Bricks', quantity: 6000 },
  { id: 10, product: 'Electrical Supplies', quantity: 3000 },
 
];


const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  webView: {
    flex: 1,
  },
  printIcon: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    backgroundColor: '#007AFF', // Blue color for the icon background
    borderRadius: 30,
    padding: 10,
    elevation: 5,
  },
});



import React, { useState, useEffect, useRef } from 'react';
import { View, StyleSheet, TouchableOpacity } from 'react-native';
import { WebView } from 'react-native-webview';
import { FAB, Icon } from 'react-native-elements';
import RNPrint from 'react-native-print';
import Root from '../Components/Root';

const ExpenseReport = ({ navigation }) => {
  const [urlLink, setUrlLink] = useState('');
  const [htmlPrint, setHtmlPrint] = useState('');
  const webViewRef = useRef(null);

  useEffect(() => {
    (async () => {
      let userid = await AsyncStorage.getItem('user_id');
      setUrlLink(global.appurl + "frmRegisterReports.aspx?mobileview=yes&id=" + userid);
    })();
    const unsubscribe = navigation.addListener('focus', () => {
      setUrlLink('');
      (async () => {
        let userid = await AsyncStorage.getItem('user_id');
        setTimeout(() => {
          setUrlLink(global.Appurl + "frmRegisterReports.aspx?mobileview=yes&id=" + userid);
        }, 100);
      })();
    });
    return unsubscribe;
  }, [])

  const handleWebViewMessage = (event) => {
    setHtmlPrint("<html><head><style>table, th, td {border: 1px solid black;}</style></head>" + event.nativeEvent.data + "</html>");
  };

  const printWebView = async () => {
    try {
      await RNPrint.print({
        html: htmlPrint,
      });
    } catch (error) {
      console.error('Error printing:', error);
    }
  };

  const jsCode = " window.ReactNativeWebView.postMessage(document.getElementById('divRecords').innerHTML);";

  return (
    <Root>
      <View style={styles.container}>
        {/* Other content */}
        <WebView
          ref={webViewRef}
          source={{ uri: urlLink }}
          style={{ marginTop: 20 }}
          injectedJavaScript={jsCode}
          onMessage={handleWebViewMessage}
        />
        <FAB
          onPress={printWebView}
          icon={<Icon name="print" type="font-awesome" style={{ lineHeight: 0 }} size={35} color="white" />}
          buttonStyle={{ padding: 0, backgroundColor: '#9f1f37', width: 70, height: 70, borderRadius: 50 }}
          containerStyle={{ position: 'absolute', bottom: 65, right: 10 }}
        />
      </View>
    </Root>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    width: '100%',
    borderWidth: 0,
    borderColor: "#000000",
    borderTopWidth: 0,
    backgroundColor: '#fff'
  },
  // Other styles...
});

export default ExpenseReport;
#007AFF blue


import React, { useState } from 'react';
import { View, Text, TextInput, StyleSheet, TouchableOpacity } from 'react-native';
import SearchableDropdown from 'react-native-searchable-dropdown';
import TableComponent from '../Components/MaterialTable'

const data = [
  { id: 1, name: 'Cement' },
  { id: 2, name: 'Steel' },
  { id: 3, name: 'Bricks' },
  { id: 4, name: 'Sand' },
  { id: 5, name: 'Concrete Blocks' },
  { id: 6, name: 'Plywood' },
];

const ProductTable = () => {
  const [selectedItem, setSelectedItem] = useState({});
  const [selectedQuantity, setSelectedQuantity] = useState('');
  const [productList, setProductList] = useState([]);

  const handleAddProduct = () => {
    if (selectedItem && selectedQuantity.trim() !== '') {
      const newProduct = {
        id: selectedItem.id || Math.random().toString(),
        name: selectedItem.name || selectedItem.trim(),
        quantity: selectedQuantity.trim(),
      };

      setProductList((prevProductList) => [...prevProductList, newProduct]);
      setSelectedItem({});
      setSelectedQuantity('');
    }
  };

  const handleRemoveProduct = (id) => {
    setProductList((prevProductList) => prevProductList.filter((product) => product.id !== id));
  };

  return (
    <View style={styles.container}>
      {/* Product Dropdown */}
      <View style={styles.dropdownWrapper}>
        <SearchableDropdown
          onTextChange={(text) => setSelectedItem({ name: text })} // Set name in selected item
          onItemSelect={(item) => setSelectedItem(item)}
          containerStyle={{ padding: 10, width: '80%' }}
          textInputStyle={{
            padding: 12,
            borderWidth: 2,
            borderColor: '#42a5f5',
            borderRadius: 8,
            backgroundColor: '#fff',
            color: '#42a5f5',
            fontWeight: 'bold',
            fontSize: 16,
          }}
          itemStyle={{
            padding: 10,
            marginTop: 0,
            borderRadius: 2,
            backgroundColor: '#f7f7f7',
            borderColor: '#BACDDB',
            borderWidth: 1.5,
          }}
          defaultIndex={0}
          selectedItems={selectedItem}
          itemTextStyle={{ color: '#222', fontWeight: 'bold' }}
          itemsContainerStyle={{ maxHeight: 140 }}
          items={data}
          placeholder="Select the Product or Enter New Product"
          resetValue={false}
          underlineColorAndroid="transparent"
        />
      </View>

      {/* Quantity Input */}
      <View style={styles.inputContainer}>
        <TextInput
          style={styles.input}
          value={selectedQuantity}
          onChangeText={setSelectedQuantity}
          keyboardType="numeric"
          placeholder="Quantity"
        />
        <TouchableOpacity style={styles.addButton} onPress={handleAddProduct}>
          <Text style={styles.addButtonText}>Add</Text>
        </TouchableOpacity>
      </View>

      {/* Table */}
      <TableComponent data={productList} onDeleteItem={handleRemoveProduct} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginBottom: 5,
    marginTop: -30,
    padding: 20,
    backgroundColor: '#fff',
  },
  dropdownWrapper: {
    marginBottom: 10,
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 20,
  },
  input: {
    flex: 1,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    paddingHorizontal: 10,
    paddingVertical: 8,
    marginRight: 10,
  },
  addButton: {
    backgroundColor: '#0E5583',
    borderRadius: 8,
    paddingVertical: 8,
    paddingHorizontal: 12,
  },
  addButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default ProductTable;
